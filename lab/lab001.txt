#使用Fetch檢查有沒有檔案異動，並更新至本機端版本
#-------------------------------------------------------------
#環境設定
001 在本機 Chack out main
002 在Github 更新  main\test_temp.TXT。
#Start
004 從SourceTree 執行Fetch
005 注意main與origin/main的差異
    注意本機目錄檔案是否有更新。
006 進行origin/main Merge
#-------------------------------------------------------------
#環境設定
001 在本機 Chack out main
002 在本機 更新 main\test_temp.TXT。
003 在Github 更新  main\test_temp.TXT。
#Start
004 從SourceTree 執行Fetch
005 注意main與origin/main的差異
    注意本機目錄檔案是否有更新。
006 進行origin/main Merge

#-------------------------------------------------------------
#環境設定
001 從 main 建立Branch：fetch_test_1 
002 在本機 Chack out fetch_test_1
002 在本機 更新 fetch_test_1\test_temp.TXT
003 在Github 更新  main\test_temp.TXT。
#Start
004 從SourceTree 執行Fetch
005 注意main與origin/main的差異
    注意本機目錄檔案是否有更新。
006 進行origin/main Merge
[Window Title]
Confirm Merge

[Content]
Are you sure you want to merge 'origin/main' into your current branch?

[ ] Create a new commit even if fast-forward is possible  [確定] [取消]

#
#使用Pull檢查有沒有檔案異動，並更新至本機端版本
#環境設定
001 建立Branch：pull_test_1 
002 Chack out pull_test_1
003 從Github 更新main\test_temp.TXT內容。
#Start


#版本衝突處理
#情境1
#在SERVER端Main/test_temp.TXT有修改，同時本機端fetch_test_1/test_temp.TXT也有修改

#情境2
#在SERVER端Main/test_temp.TXT有修改，同時本機端fetch_test_1/test_temp.TXT也有修改
